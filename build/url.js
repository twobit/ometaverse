var ometajs_ = require("ometajs");var AbstractGrammar = ometajs_.grammars.AbstractGrammar;var BSJSParser = ometajs_.grammars.BSJSParser;var BSJSIdentity = ometajs_.grammars.BSJSIdentity;var BSJSTranslator = ometajs_.grammars.BSJSTranslator;// scheme://username:password@domain:port/path?query_string#fragment_id
var URL = function URL(source, opts) {AbstractGrammar.call(this, source, opts)};URL.grammarName = "URL";URL.match = AbstractGrammar.match;URL.matchAll = AbstractGrammar.matchAll;exports.URL = URL;require("util").inherits(URL, AbstractGrammar);URL.prototype["root"] = function $root() {var proto, a, host, port, p, q, h, u;return (this._list(function() {return this._optional(function() {return this._rule("proto",false,[],null,this["proto"])}) && ((proto = this._getIntermediate()), true) && this._optional(function() {return this._rule("auth",false,[],null,this["auth"])}) && ((a = this._getIntermediate()), true) && this._rule("host",false,[],null,this["host"]) && ((host = this._getIntermediate()), true) && this._optional(function() {return this._rule("port",false,[],null,this["port"])}) && ((port = this._getIntermediate()), true) && this._optional(function() {return this._rule("path",false,[],null,this["path"])}) && ((p = this._getIntermediate()), true) && this._optional(function() {return this._rule("query",false,[],null,this["query"])}) && ((q = this._getIntermediate()), true) && this._optional(function() {return this._rule("hash",false,[],null,this["hash"])}) && ((h = this._getIntermediate()), true)}, true) && ((u = this._getIntermediate()), true) && this._exec(({protocol:proto,slashes:true,auth:a,host:host+(port?":"+port:""),port:port,hostname:host,href:u,hash:h,search:"?"+q,query:q,pathname:p,path:p+(q?"?"+q:"")})))};
URL.prototype["proto"] = function $proto() {return ((this._atomic(function() {var s;return this._seq(/^([a-z0-9]+)/) && ((s = this._getIntermediate()), true) && this._match(":") && this._match("/") && this._match("/") && this._exec(s)})))};
URL.prototype["auth"] = function $auth() {return ((this._atomic(function() {var u, p;return this._seq(/^([^:@]+)/) && ((u = this._getIntermediate()), true) && this._optional(function() {return (this._match(":") && this._seq(/^([^@]+)/))}) && ((p = this._getIntermediate()), true) && this._match("@") && this._exec([u,p])})))};
URL.prototype["host"] = function $host() {var d;return (this._seq(/^([a-z0-9\.\-\_]+)/) && ((d = this._getIntermediate()), true) && this._exec(d))};
URL.prototype["port"] = function $port() {return ((this._atomic(function() {var p;return this._match(":") && this._seq(/^([0-9]+)/) && ((p = this._getIntermediate()), true) && this._exec(p)})))};
URL.prototype["path"] = function $path() {return ((this._atomic(function() {var p;return this._seq(/^([^?#]+)/) && ((p = this._getIntermediate()), true) && this._exec(p)})))};
URL.prototype["query"] = function $query() {return ((this._atomic(function() {var q;return this._match("?") && this._seq(/^([^#]+)/) && ((q = this._getIntermediate()), true) && this._exec(q)})))};
URL.prototype["hash"] = function $hash() {return ((this._atomic(function() {var h;return this._seq(/^(.+)/) && ((h = this._getIntermediate()), true) && this._exec(h)})))};
var URL2 = function URL2(source, opts) {AbstractGrammar.call(this, source, opts)};URL2.grammarName = "URL2";URL2.match = AbstractGrammar.match;URL2.matchAll = AbstractGrammar.matchAll;exports.URL2 = URL2;require("util").inherits(URL2, AbstractGrammar);